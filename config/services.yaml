# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  mlp.packages.dir: '%kernel.project_dir%/packages'
  mlp.translations.dir: '%kernel.project_dir%/translations'
  mlp.transifex.api.token: '%env(TRANSIFEX_API_TOKEN)%'
  mlp.transifex.organisation: '%env(TRANSIFEX_ORGANISATION)%'
  mlp.transifex.project: '%env(TRANSIFEX_PROJECT)%'
  mlp.aws.key: '%env(AWS_KEY)%'
  mlp.aws.secret: '%env(AWS_SECRET)%'
  mlp.aws.region: '%env(AWS_REGION)%'
  mlp.aws.bucket: '%env(AWS_BUCKET)%'

services: # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  MauticLanguagePacker\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  mautic.transifex:
    class: Mautic\Transifex\Transifex
    factory: [ 'MauticLanguagePacker\Factory\TransifexFactory', 'create' ]
    arguments:
      $apiToken: '%mlp.transifex.api.token%'
      $organisation: '%mlp.transifex.organisation%'
      $project: '%mlp.transifex.project%'

  Mautic\Transifex\TransifexInterface:
    alias: 'mautic.transifex'

  MauticLanguagePacker\Service\AwsClient:
    class: MauticLanguagePacker\Service\AwsClient
    arguments:
      - { version: 'latest', region: '%mlp.aws.region%', credentials: { key: '%mlp.aws.key%', secret: '%mlp.aws.secret%' } }
